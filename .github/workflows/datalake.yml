name: Build and deploy datalake

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - dockerfile: "datalake/Dockerfile"
            image_suffix: ""
          - site: "datalake/Dockerfile.streaming"
            image_suffix: "-streaming"
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/canary' && 'canary' || github.ref == 'refs/heads/staging' && 'staging' || 'unknown' }}
      
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set sha-short
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV

      - id: lower-repo
        name: Repository to lowercase
        run: |
          echo "repository=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.lower-repo.outputs.repository }}-datalake
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: |
            type=sha
            type=sha,format=long
            type=ref,event=branch

      - name: Build and push Docker images in parallel
        uses: docker/build-push-action@v6
        with:
          context: datalake
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ steps.lower-repo.outputs.repository }}-datalake${{ matrix.image_suffix }}:${{ env.GITHUB_SHA_SHORT }}
            ghcr.io/${{ steps.lower-repo.outputs.repository }}-datalake${{ matrix.image_suffix }}:${{ env.APP_ENV }}
          build-args: |
            sha=${{ github.sha }}
            sha_short=${{ env.GITHUB_SHA_SHORT }}
            app_env=${{ env.APP_ENV }} 
